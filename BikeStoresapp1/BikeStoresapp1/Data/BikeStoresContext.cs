// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BikeStoresapp1.Models;

namespace BikeStoresapp1.Data
{
    public partial class BikeStoresContext : DbContext
    {
        public BikeStoresContext()
        {
        }

        public BikeStoresContext(DbContextOptions<BikeStoresContext> options)
            : base(options)
        {
        }

        public virtual DbSet<brands> brands { get; set; }
        public virtual DbSet<categories> categories { get; set; }
        public virtual DbSet<customers> customers { get; set; }
        public virtual DbSet<order_items> order_items { get; set; }
        public virtual DbSet<orders> orders { get; set; }
        public virtual DbSet<products> products { get; set; }
        public virtual DbSet<staffs> staffs { get; set; }
        public virtual DbSet<stocks> stocks { get; set; }
        public virtual DbSet<stores> stores { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<brands>(entity =>
            {
                entity.HasKey(e => e.brand_id)
                    .HasName("PK__brands__5E5A8E278991E306");

                entity.ToTable("brands", "production");

                entity.Property(e => e.brand_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<categories>(entity =>
            {
                entity.HasKey(e => e.category_id)
                    .HasName("PK__categori__D54EE9B4E525BBE4");

                entity.ToTable("categories", "production");

                entity.Property(e => e.category_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<customers>(entity =>
            {
                entity.HasKey(e => e.customer_id)
                    .HasName("PK__customer__CD65CB85FCDB8A7B");

                entity.ToTable("customers", "sales");

                entity.Property(e => e.city)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.first_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.last_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.state)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.street)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.zip_code)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<order_items>(entity =>
            {
                entity.HasKey(e => new { e.order_id, e.item_id })
                    .HasName("PK__order_it__837942D4B76F9112");

                entity.ToTable("order_items", "sales");

                entity.Property(e => e.discount).HasColumnType("decimal(4, 2)");

                entity.Property(e => e.list_price).HasColumnType("decimal(10, 2)");

                entity.HasOne(d => d.order)
                    .WithMany(p => p.order_items)
                    .HasForeignKey(d => d.order_id)
                    .HasConstraintName("FK__order_ite__order__3A81B327");

                entity.HasOne(d => d.product)
                    .WithMany(p => p.order_items)
                    .HasForeignKey(d => d.product_id)
                    .HasConstraintName("FK__order_ite__produ__3B75D760");
            });

            modelBuilder.Entity<orders>(entity =>
            {
                entity.HasKey(e => e.order_id)
                    .HasName("PK__orders__46596229B9BF3DC6");

                entity.ToTable("orders", "sales");

                entity.Property(e => e.order_date).HasColumnType("date");

                entity.Property(e => e.required_date).HasColumnType("date");

                entity.Property(e => e.shipped_date).HasColumnType("date");

                entity.HasOne(d => d.customer)
                    .WithMany(p => p.orders)
                    .HasForeignKey(d => d.customer_id)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__orders__customer__34C8D9D1");

                entity.HasOne(d => d.staff)
                    .WithMany(p => p.orders)
                    .HasForeignKey(d => d.staff_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__orders__staff_id__36B12243");

                entity.HasOne(d => d.store)
                    .WithMany(p => p.orders)
                    .HasForeignKey(d => d.store_id)
                    .HasConstraintName("FK__orders__store_id__35BCFE0A");
            });

            modelBuilder.Entity<products>(entity =>
            {
                entity.HasKey(e => e.product_id)
                    .HasName("PK__products__47027DF5D4387B15");

                entity.ToTable("products", "production");

                entity.Property(e => e.list_price).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.product_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.brand)
                    .WithMany(p => p.products)
                    .HasForeignKey(d => d.brand_id)
                    .HasConstraintName("FK__products__brand___29572725");

                entity.HasOne(d => d.category)
                    .WithMany(p => p.products)
                    .HasForeignKey(d => d.category_id)
                    .HasConstraintName("FK__products__catego__286302EC");
            });

            modelBuilder.Entity<staffs>(entity =>
            {
                entity.HasKey(e => e.staff_id)
                    .HasName("PK__staffs__1963DD9C6F993C6A");

                entity.ToTable("staffs", "sales");

                

                entity.Property(e => e.email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.first_name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.last_name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.HasOne(d => d.manager)
                    .WithMany(p => p.Inversemanager)
                    .HasForeignKey(d => d.manager_id)
                    .HasConstraintName("FK__staffs__manager___31EC6D26");

                entity.HasOne(d => d.store)
                    .WithMany(p => p.staffs)
                    .HasForeignKey(d => d.store_id)
                    .HasConstraintName("FK__staffs__store_id__30F848ED");
            });

            modelBuilder.Entity<stocks>(entity =>
            {
                entity.HasKey(e => new { e.store_id, e.product_id })
                    .HasName("PK__stocks__E68284D39B919559");

                entity.ToTable("stocks", "production");

                entity.HasOne(d => d.product)
                    .WithMany(p => p.stocks)
                    .HasForeignKey(d => d.product_id)
                    .HasConstraintName("FK__stocks__product___3F466844");

                entity.HasOne(d => d.store)
                    .WithMany(p => p.stocks)
                    .HasForeignKey(d => d.store_id)
                    .HasConstraintName("FK__stocks__store_id__3E52440B");
            });

            modelBuilder.Entity<stores>(entity =>
            {
                entity.HasKey(e => e.store_id)
                    .HasName("PK__stores__A2F2A30C3B991D58");

                entity.ToTable("stores", "sales");

                entity.Property(e => e.city)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.state)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.store_name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.street)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.zip_code)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}